name: Deploy to Docker Versioning on EC2

on:
  push:
    branches: ['master']

env:
  CURRENT_VERSION: 1.1.3
  PREVIOUS_VERSION: 1.1.2
  SERVICE_NAME: nestjs-backend-project

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: npm install

      - name: Build Application
        run: npm run build

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker image
        id: build-image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/vdr-services:${{ env.SERVICE_NAME }}-${{ env.CURRENT_VERSION }} .

      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/vdr-services:${{ env.SERVICE_NAME }}-${{ env.CURRENT_VERSION }}

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Deploy on EC2 via SSH
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Verify Docker is running
            sudo systemctl status docker || sudo systemctl start docker

            # Login to Docker Hub
            echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

            # Pull the latest Docker image
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/vdr-services:${{ env.SERVICE_NAME }}-${{ env.CURRENT_VERSION }}

            # Stop and remove existing container
            sudo docker stop ${{ env.SERVICE_NAME }}-${{ env.CURRENT_VERSION }} || true
            sudo docker rm ${{ env.SERVICE_NAME }}-${{ env.CURRENT_VERSION }} || true

            # Run the new container
            sudo docker run -d \
              --name ${{ env.SERVICE_NAME }}-${{ env.CURRENT_VERSION }} \
              -p ${{ secrets.APP_PORT }}:3000 \
              ${{ secrets.DOCKER_USERNAME }}/vdr-services:${{ env.SERVICE_NAME }}-${{ env.CURRENT_VERSION }}

            # Verify deployment
            sudo docker ps | grep ${{ env.SERVICE_NAME }}